// This file was generated by the Gradle 'init' task, but is modified beyond all recognition ;)
// This is tested and works with Gradle versions 4.10.3, 5.0, 5.6.4, 6.9.3, 7.3.2/NetBeans15, 7.5.1, 7.6.2, 8.3

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

tasks.register('rebuild') {
	dependsOn 'build', 'clean'
	tasks.getByName('build').mustRunAfter tasks.getByName('clean')
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	// Use JUnit Jupiter for testing.
//	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

	int GMV="$gradle.gradleVersion".split('[.]')[0] as int;
	if ( GMV >= 6 ) { 
            testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        }
}

application {
	// Define the main class for the application.

	int GMV="$gradle.gradleVersion".split('[.]')[0] as int;
	println "Info: Running on Gradle major version $GMV ($gradle.gradleVersion)"
	if ( GMV >= 6 ) { 
		mainClass.set("hu.kwu.tugip.App")
	} else{ 
		mainClassName = 'hu.kwu.tugip.App'
	}
	
	// Aiming for JRE 8 so that it runs even on deprecated old platforms
        java {
             sourceCompatibility = JavaVersion.VERSION_1_8
             targetCompatibility = JavaVersion.VERSION_1_8
        }
}

compileJava {
    options.compilerArgs << '-parameters' 
}

tasks.jar {
    manifest.attributes["Main-Class"] = "hu.kwu.tugip.App"
}

tasks.getByName('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}